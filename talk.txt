
=======================================================
Supporting All Versions of Python All The Time With Tox
=======================================================

:Author: Kumar McMillan
:Venue: PyCon 2011
:Slides: http://farmdev.com/talks/tox/

Packages
========

- We build packages
- We share packages

  - github
  - PyPI

- Fabric of our community

.. class:: handout

  There are many people in this room who have created packages that I use

The Python Package Index
========================

http://pypi.python.org/pypi

.. class:: incremental

  - 13,560 packages
  - Ready for Python 3?
  - 374

.. class:: handout

  - less than 4%

Python 2
========

.. class:: center

  .. class:: huge

    PYTHON 2

  .. class:: huge

    IS

  .. class:: huge

    DEPRECATED

.. class:: handout

  - 2.7 was the last release, maintenance mode
  - 3.2 was just released!


How do we get on Python 3?
==========================

Developing in tandem with tox: http://codespeak.net/tox/

.. image:: images/tandem.jpg

Developing a package
====================

.. code-block:: bash

  $ virtualenv ~/tmp/fudge
  $ source ~/tmp/fudge/bin/activate
  (fudge)$ python setup.py develop
  (fudge)$ pip install Nose
  (fudge)$ nosetests
  ......................................................................................................................................................................................
  ----------------------------------------------------------------------
  Ran 182 tests in 0.589s

  OK

.. class:: handout

  - Great, but all this ran in my default Python
  - How do you do this for Python3?

Python 3 Syntax
===============

.. code-block:: python

  python3
  >>> import fudge
  Traceback (most recent call last):
    ...
    File "fudge/patcher.py", line 83
      raise etype, val, tb
                 ^
  SyntaxError: invalid syntax

Python 3 Syntax
===============

Python **2**:

.. code-block:: python

  print u'Hello %s' % name

Python **3**:

.. code-block:: python

  print('Hello {0}'.format(name))

- **2to3** (stdlib)
- converts most syntax automatically


Dual platform setup.py
======================

.. code-block:: python

  kw = {}
  if sys.version_info >= (3,):
      kw['use_2to3'] = True

  setup(name='YourModule',
        version='0.1,
        **kw)

.. code-block:: bash

  $ python setup.py build

(requires distribute)

Single Source for 2 and 3
=========================

- requires more work and some hacks
- Example: mock

  - http://www.voidspace.org.uk/python/articles/porting-mock-to-python-3.shtml
  - supports 2.4 - 3.2

setup.py classifiers for PyPI
=============================

.. code-block:: python

  setup(
    name='YourModule',
    version='0.1,
    classifiers=[
      'Programming Language :: Python',
      'Programming Language :: Python :: 3'
    ],
    **kw
  )

Supporting Python 3 With Tox
============================

tox automates all of this!

- virtualenv per interpreter
- installs your package
- pip / easy_install requirements
- runs tests

.. code-block:: bash

  $ cd fudge
  $ tox -e py26,py32

[demo]

tox.ini config
==============

.. code-block:: ini

  [tox]
  envlist=py26,py32

  [testenv]
  deps=nose
  commands=
    nosetests []

Distributed tests
=================

.. code-block:: ini

  [testenv]
  deps=nose
  commands=nosetests []

  [testenv:py32]
  commands=
    nosetests fudge.tests.all_tests

Non-distributed tests
=====================

::

  nose/__init__.py
  setup.py
  unit_tests/
  functional_tests/

.. code-block:: ini

  [testenv:py32]
  commands=
    {envpython} setup.py build_tests
    cd build/tests
    {envpython} runtests.py []

https://bitbucket.org/jpellerin/nose

Sphinx doctests
===============

.. code-block:: ini

  [testenv:docs]
  changedir=docs
  deps=sphinx
       nose
  commands=
      make clean
      make doctest
      make html

Test against Django trunk
=========================

.. code-block:: ini

  [testenv]
  deps= django
  commands=python manage.py test

  [testenv:trunk]
  basepython=python2.6
  deps=
    svn+http://code.djangoproject.com/svn/django/trunk/#egg=django

Cross platform support
======================

- py24 ... py32
- jython
- pypy
- docs (Sphinx)

(must be installed)

Using tox in CI
===============

Jenkins Matrix Build:

.. image:: images/jenkins-matrix1.png

Jenkins Matrix Build
====================

.. image:: images/jenkins-matrix2.png

::

  tox -e py26

::

  $TOXENV=py26

Jenkins Matrix Build
====================

.. image:: images/jenkins-matrix3.png

Hudson Bootstrapping
====================

.. code-block:: python

    # install tox on any slave:
    url = "https://pytox.googlecode.com/hg/toxbootstrap.py"
    d = dict(__file__='toxbootstrap.py')
    exec urllib.urlopen(url).read() in d
    d['cmdline'](['--recreate'])

Summary
=======

- toxify with tox.ini
- support more Pythons

Python 3:

- single source
- convert with 2to3

  - run tests by import path
  - build tests separately

Questions?
==========

Thank You

- slides: http://farmdev.com/talks/tox/
- me: @kumar303 http://farmdev.com/
- thanks to Holger Krekel for tox!
